%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 824 578
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\p.laur\Desktop\Semester_4\P2\absorbtion_radioaktiver_strahlung\Diagramme\ars_4_1_Cs-137_ln.eps)
%%CreationDate: Sat Apr 27 10:33:07 2013
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4190 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 44/s44 put
Encoding 45/s45 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 53/s53 put
/BoundingBoxes 9 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s44 [0 -434 569 1854] def
/s45 [0 -434 682 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s51 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
end
/Metrics 9 dict def
 Metrics begin
/s32 569 def
/s44 569 def
/s45 682 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s51 1139 def
/s53 1139 def
end
/CharProcs 9 dict def
CharProcs begin
/.notdef {} def
/s44 {
182 0 m
182 205 182 0 182 205 c
387 205 182 205 387 205 c
387 0 387 205 387 0 c
387 -75.33 373.67 -136.17 347 -182.5 c
320.33 -228.83 278 -264.67 220 -290 c
170 -213 220 -290 170 -213 c
208 -196.33 236 -171.83 254 -139.5 c
272 -107.17 282 -60.67 284 0 c
182 0 284 0 182 0 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s51 {
86 387 m
266 411 86 387 266 411 c
286.67 309 321.83 235.5 371.5 190.5 c
421.17 145.5 481.67 123 553 123 c
637.67 123 709.17 152.33 767.5 211 c
825.83 269.67 855 342.33 855 429 c
855 511.67 828 579.83 774 633.5 c
720 687.17 651.33 714 568 714 c
534 714 491.67 707.33 441 694 c
461 852 441 694 461 852 c
473 850.67 482.67 850 490 850 c
566.67 850 635.67 870 697 910 c
758.33 950 789 1011.67 789 1095 c
789 1161 766.67 1215.67 722 1259 c
677.33 1302.33 619.67 1324 549 1324 c
479 1324 420.67 1302 374 1258 c
327.33 1214 297.33 1148 284 1060 c
104 1092 284 1060 104 1092 c
126 1212.67 176 1306.17 254 1372.5 c
332 1438.83 429 1472 545 1472 c
625 1472 698.67 1454.83 766 1420.5 c
833.33 1386.17 884.83 1339.33 920.5 1280 c
956.17 1220.67 974 1157.67 974 1091 c
974 1027.67 957 970 923 918 c
889 866 838.67 824.67 772 794 c
858.67 774 926 732.5 974 669.5 c
1022 606.5 1046 527.67 1046 433 c
1046 305 999.33 196.5 906 107.5 c
812.67 18.5 694.67 -26 552 -26 c
423.33 -26 316.5 12.33 231.5 89 c
146.5 165.67 98 265 86 387 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4190 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 82/s82 put
Encoding 107/s107 put
Encoding 108/s108 put
Encoding 110/s110 put
Encoding 111/s111 put
Encoding 114/s114 put
/BoundingBoxes 10 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s82 [0 -434 1479 1854] def
/s107 [0 -434 1024 1854] def
/s108 [0 -434 455 1854] def
/s110 [0 -434 1139 1854] def
/s111 [0 -434 1139 1854] def
/s114 [0 -434 682 1854] def
end
/Metrics 10 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s82 1479 def
/s107 1024 def
/s108 455 def
/s110 1139 def
/s111 1139 def
/s114 682 def
end
/CharProcs 10 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s82 {
161 0 m
161 1466 161 0 161 1466 c
811 1466 161 1466 811 1466 c
941.67 1466 1041 1452.83 1109 1426.5 c
1177 1400.17 1231.33 1353.67 1272 1287 c
1312.67 1220.33 1333 1146.67 1333 1066 c
1333 962 1299.33 874.33 1232 803 c
1164.67 731.67 1060.67 686.33 920 667 c
971.33 642.33 1010.33 618 1037 594 c
1093.67 542 1147.33 477 1198 399 c
1453 0 1198 399 1453 0 c
1209 0 1453 0 1209 0 c
1015 305 1209 0 1015 305 c
958.33 393 911.67 460.33 875 507 c
838.33 553.67 805.5 586.33 776.5 605 c
747.5 623.67 718 636.67 688 644 c
666 648.67 630 651 580 651 c
355 651 580 651 355 651 c
355 0 355 651 355 0 c
161 0 355 0 161 0 c
closepath 355 819 m
772 819 355 819 772 819 c
860.67 819 930 828.17 980 846.5 c
1030 864.83 1068 894.17 1094 934.5 c
1120 974.83 1133 1018.67 1133 1066 c
1133 1135.33 1107.83 1192.33 1057.5 1237 c
1007.17 1281.67 927.67 1304 819 1304 c
355 1304 819 1304 355 1304 c
355 819 355 1304 355 819 c
closepath } bind def
/s107 {
136 0 m
136 1466 136 0 136 1466 c
316 1466 136 1466 316 1466 c
316 630 316 1466 316 630 c
742 1062 316 630 742 1062 c
975 1062 742 1062 975 1062 c
569 668 975 1062 569 668 c
1016 0 569 668 1016 0 c
794 0 1016 0 794 0 c
443 543 794 0 443 543 c
316 421 443 543 316 421 c
316 0 316 421 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s108 {
131 0 m
131 1466 131 0 131 1466 c
311 1466 131 1466 311 1466 c
311 0 311 1466 311 0 c
131 0 311 0 131 0 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s111 {
68 531 m
68 727.67 122.67 873.33 232 968 c
323.33 1046.67 434.67 1086 566 1086 c
712 1086 831.33 1038.17 924 942.5 c
1016.67 846.83 1063 714.67 1063 546 c
1063 409.33 1042.5 301.83 1001.5 223.5 c
960.5 145.17 900.83 84.33 822.5 41 c
744.17 -2.33 658.67 -24 566 -24 c
417.33 -24 297.17 23.67 205.5 119 c
113.83 214.33 68 351.67 68 531 c
closepath 253 531 m
253 395 282.67 293.17 342 225.5 c
401.33 157.83 476 124 566 124 c
655.33 124 729.67 158 789 226 c
848.33 294 878 397.67 878 537 c
878 668.33 848.17 767.83 788.5 835.5 c
728.83 903.17 654.67 937 566 937 c
476 937 401.33 903.33 342 836 c
282.67 768.67 253 667 253 531 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC3_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4190 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 68/s68 put
Encoding 99/s99 put
Encoding 101/s101 put
Encoding 105/s105 put
Encoding 107/s107 put
Encoding 109/s109 put
/BoundingBoxes 10 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s68 [0 -434 1479 1854] def
/s99 [0 -434 1024 1854] def
/s101 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s107 [0 -434 1024 1854] def
/s109 [0 -434 1706 1854] def
end
/Metrics 10 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s68 1479 def
/s99 1024 def
/s101 1139 def
/s105 455 def
/s107 1024 def
/s109 1706 def
end
/CharProcs 10 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s68 {
158 0 m
158 1466 158 0 158 1466 c
663 1466 158 1466 663 1466 c
777 1466 864 1459 924 1445 c
1008 1425.67 1079.67 1390.67 1139 1340 c
1216.33 1274.67 1274.17 1191.17 1312.5 1089.5 c
1350.83 987.83 1370 871.67 1370 741 c
1370 629.67 1357 531 1331 445 c
1305 359 1271.67 287.83 1231 231.5 c
1190.33 175.17 1145.83 130.83 1097.5 98.5 c
1049.17 66.17 990.83 41.67 922.5 25 c
854.17 8.33 775.67 0 687 0 c
158 0 687 0 158 0 c
closepath 352 173 m
665 173 352 173 665 173 c
761.67 173 837.5 182 892.5 200 c
947.5 218 991.33 243.33 1024 276 c
1070 322 1105.83 383.83 1131.5 461.5 c
1157.17 539.17 1170 633.33 1170 744 c
1170 897.33 1144.83 1015.17 1094.5 1097.5 c
1044.17 1179.83 983 1235 911 1263 c
859 1283 775.33 1293 660 1293 c
352 1293 660 1293 352 1293 c
352 173 352 1293 352 173 c
closepath } bind def
/s99 {
828 389 m
1005 366 828 389 1005 366 c
985.67 244 936.17 148.5 856.5 79.5 c
776.83 10.5 679 -24 563 -24 c
417.67 -24 300.83 23.5 212.5 118.5 c
124.17 213.5 80 349.67 80 527 c
80 641.67 99 742 137 828 c
175 914 232.83 978.5 310.5 1021.5 c
388.17 1064.5 472.67 1086 564 1086 c
679.33 1086 773.67 1056.83 847 998.5 c
920.33 940.17 967.33 857.33 988 750 c
813 723 988 750 813 723 c
796.33 794.33 766.83 848 724.5 884 c
682.17 920 631 938 571 938 c
480.33 938 406.67 905.5 350 840.5 c
293.33 775.5 265 672.67 265 532 c
265 389.33 292.33 285.67 347 221 c
401.67 156.33 473 124 561 124 c
631.67 124 690.67 145.67 738 189 c
785.33 232.33 815.33 299 828 389 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s107 {
136 0 m
136 1466 136 0 136 1466 c
316 1466 136 1466 316 1466 c
316 630 316 1466 316 630 c
742 1062 316 630 742 1062 c
975 1062 742 1062 975 1062 c
569 668 975 1062 569 668 c
1016 0 569 668 1016 0 c
794 0 1016 0 794 0 c
443 543 794 0 443 543 c
316 421 443 543 316 421 c
316 0 316 421 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s109 {
135 0 m
135 1062 135 0 135 1062 c
296 1062 135 1062 296 1062 c
296 913 296 1062 296 913 c
329.33 965 373.67 1006.83 429 1038.5 c
484.33 1070.17 547.33 1086 618 1086 c
696.67 1086 761.17 1069.67 811.5 1037 c
861.83 1004.33 897.33 958.67 918 900 c
1002 1024 1111.33 1086 1246 1086 c
1351.33 1086 1432.33 1056.83 1489 998.5 c
1545.67 940.17 1574 850.33 1574 729 c
1574 0 1574 729 1574 0 c
1395 0 1574 0 1395 0 c
1395 669 1395 0 1395 669 c
1395 741 1389.17 792.83 1377.5 824.5 c
1365.83 856.17 1344.67 881.67 1314 901 c
1283.33 920.33 1247.33 930 1206 930 c
1131.33 930 1069.33 905.17 1020 855.5 c
970.67 805.83 946 726.33 946 617 c
946 0 946 617 946 0 c
766 0 946 0 766 0 c
766 690 766 0 766 690 c
766 770 751.33 830 722 870 c
692.67 910 644.67 930 578 930 c
527.33 930 480.5 916.67 437.5 890 c
394.5 863.33 363.33 824.33 344 773 c
324.67 721.67 315 647.67 315 551 c
315 0 315 551 315 0 c
135 0 315 0 135 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 823.69 577.45 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.478132 0.481277 sc

/initmtx mtx cmtx def
[0.501969 -0 0 -0.498688 0 1199.82] concat
gs
gs
1 -1 sc
/MC1_Arial 50 self 590 -2101 m
(-5)[17 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 934 -2101 m
(0)[28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 1268 -2101 m
(5)[28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 1589 -2101 m
(10)[28 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 1923 -2101 m
(15)[28 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 2258 -2101 m
(20)[28 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 2592 -2101 m
(25)[28 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 2927 -2101 m
(30)[28 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 469 -2018 m
(-0,5)[17 28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -1771 m
(0,0)[28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -1525 m
(0,5)[28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -1278 m
(1,0)[28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -1032 m
(1,5)[28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -785 m
(2,0)[28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -539 m
(2,5)[28 14 28 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 50 self 486 -292 m
(3,0)[28 14 28 ] xs
1 -1 sc
gr
613 2039 m
613 2005 l
7 sw
1 sj
1 scap
st
780 2022 m
780 2005 l
st
948 2039 m
948 2005 l
st
1115 2022 m
1115 2005 l
st
1282 2039 m
1282 2005 l
st
1449 2022 m
1449 2005 l
st
1617 2039 m
1617 2005 l
st
1784 2022 m
1784 2005 l
st
1951 2039 m
1951 2005 l
st
2119 2022 m
2119 2005 l
st
2286 2039 m
2286 2005 l
st
2453 2022 m
2453 2005 l
st
2620 2039 m
2620 2005 l
st
2788 2022 m
2788 2005 l
st
2955 2039 m
2955 2005 l
st
613 2005 m
2955 2005 l
st
579 2005 m
613 2005 l
st
596 1882 m
613 1882 l
st
579 1758 m
613 1758 l
st
596 1635 m
613 1635 l
st
579 1512 m
613 1512 l
st
596 1389 m
613 1389 l
st
579 1265 m
613 1265 l
st
596 1142 m
613 1142 l
st
579 1019 m
613 1019 l
st
596 895 m
613 895 l
st
579 772 m
613 772 l
st
596 649 m
613 649 l
st
579 526 m
613 526 l
st
596 402 m
613 402 l
st
579 279 m
613 279 l
st
613 2005 m
613 279 l
st
gs
pathproc 613 279 2343 1727 np rectpath
/eocl cland
np exec
930 602 36 36 rectfill
613 279 m
3 sw
930 602 36 36 rectstroke
996 666 36 36 rectfill
996 666 36 36 rectstroke
1063 712 36 36 rectfill
1063 712 36 36 rectstroke
1264 878 36 36 rectfill
1264 878 36 36 rectstroke
1599 1123 36 36 rectfill
1599 1123 36 36 rectstroke
1933 1382 36 36 rectfill
1933 1382 36 36 rectstroke
2268 1650 36 36 rectfill
2268 1650 36 36 rectstroke
2602 1873 36 36 rectfill
2602 1873 36 36 rectstroke
gr
gs
pathproc 613 279 2343 1727 np rectpath
/eocl cland
np exec
948 631 m
948 631 m
949 632 l
951 633 l
953 635 l
954 636 l
956 637 l
958 639 l
959 640 l
961 641 l
963 642 l
964 644 l
966 645 l
968 646 l
969 648 l
971 649 l
973 650 l
974 651 l
976 653 l
978 654 l
979 655 l
981 657 l
983 658 l
984 659 l
986 660 l
988 662 l
989 663 l
991 664 l
993 665 l
994 667 l
996 668 l
998 669 l
999 671 l
1001 672 l
1003 673 l
1005 674 l
1006 676 l
1008 677 l
1010 678 l
1011 680 l
1013 681 l
1015 682 l
1016 683 l
1018 685 l
1020 686 l
1021 687 l
1023 688 l
1025 690 l
1026 691 l
1028 692 l
1030 694 l
1031 695 l
1033 696 l
1035 697 l
1036 699 l
1038 700 l
1040 701 l
1041 703 l
1043 704 l
1045 705 l
1046 706 l
1048 708 l
1050 709 l
1051 710 l
1053 711 l
1055 713 l
1056 714 l
1058 715 l
1060 717 l
1061 718 l
1063 719 l
1065 720 l
1066 722 l
1068 723 l
1070 724 l
1071 726 l
1073 727 l
1075 728 l
1077 729 l
1078 731 l
1080 732 l
1082 733 l
1083 734 l
1085 736 l
1087 737 l
1088 738 l
1090 740 l
1092 741 l
1093 742 l
1095 743 l
1097 745 l
1098 746 l
1100 747 l
1102 749 l
1103 750 l
1105 751 l
1107 752 l
1108 754 l
1110 755 l
1112 756 l
1113 757 l
1115 759 l
1117 760 l
1118 761 l
1120 763 l
1122 764 l
1123 765 l
1125 766 l
1127 768 l
1128 769 l
1130 770 l
1132 772 l
1133 773 l
1135 774 l
1137 775 l
1138 777 l
1140 778 l
1142 779 l
1143 780 l
1145 782 l
1147 783 l
1149 784 l
1150 786 l
1152 787 l
1154 788 l
1155 789 l
1157 791 l
1159 792 l
1160 793 l
1162 795 l
1164 796 l
1165 797 l
1167 798 l
1169 800 l
1170 801 l
1172 802 l
1174 803 l
1175 805 l
1177 806 l
1179 807 l
1180 809 l
1182 810 l
1184 811 l
1185 812 l
1187 814 l
1189 815 l
1190 816 l
1192 818 l
1194 819 l
1195 820 l
1197 821 l
1199 823 l
1200 824 l
1202 825 l
1204 826 l
1205 828 l
1207 829 l
1209 830 l
1210 832 l
1212 833 l
1214 834 l
1215 835 l
1217 837 l
1219 838 l
1221 839 l
1222 841 l
1224 842 l
1226 843 l
1227 844 l
1229 846 l
1231 847 l
1232 848 l
1234 849 l
1236 851 l
1237 852 l
1239 853 l
1241 855 l
1242 856 l
1244 857 l
1246 858 l
1247 860 l
1249 861 l
1251 862 l
1252 864 l
1254 865 l
1256 866 l
1257 867 l
1259 869 l
1261 870 l
1262 871 l
1264 872 l
1266 874 l
1267 875 l
1269 876 l
1271 878 l
1272 879 l
1274 880 l
1276 881 l
1277 883 l
1279 884 l
1281 885 l
1282 887 l
1284 888 l
1286 889 l
1288 890 l
1289 892 l
1291 893 l
1293 894 l
1294 895 l
1296 897 l
1298 898 l
1299 899 l
1301 901 l
1303 902 l
1304 903 l
1306 904 l
1308 906 l
1309 907 l
1311 908 l
1313 910 l
1314 911 l
1316 912 l
1318 913 l
1319 915 l
1321 916 l
1323 917 l
1324 918 l
1326 920 l
1328 921 l
1329 922 l
1331 924 l
1333 925 l
1334 926 l
1336 927 l
1338 929 l
1339 930 l
1341 931 l
1343 933 l
1344 934 l
1346 935 l
1348 936 l
1349 938 l
1351 939 l
1353 940 l
1354 941 l
1356 943 l
1358 944 l
1360 945 l
1361 947 l
1363 948 l
1365 949 l
1366 950 l
1368 952 l
1370 953 l
1371 954 l
1373 956 l
1375 957 l
1376 958 l
1378 959 l
1380 961 l
1381 962 l
1383 963 l
1385 965 l
1386 966 l
1388 967 l
1390 968 l
1391 970 l
1393 971 l
1395 972 l
1396 973 l
1398 975 l
1400 976 l
1401 977 l
1403 979 l
1405 980 l
1406 981 l
1408 982 l
1410 984 l
1411 985 l
1413 986 l
1415 988 l
1416 989 l
1418 990 l
1420 991 l
1421 993 l
1423 994 l
1425 995 l
1426 996 l
1428 998 l
1430 999 l
1432 1000 l
1433 1002 l
1435 1003 l
1437 1004 l
1438 1005 l
1440 1007 l
1442 1008 l
1443 1009 l
1445 1011 l
1447 1012 l
1448 1013 l
1450 1014 l
1452 1016 l
1453 1017 l
1455 1018 l
1457 1019 l
1458 1021 l
1460 1022 l
1462 1023 l
1463 1025 l
1465 1026 l
1467 1027 l
1468 1028 l
1470 1030 l
1472 1031 l
1473 1032 l
1475 1034 l
1477 1035 l
1478 1036 l
1480 1037 l
1482 1039 l
1483 1040 l
1485 1041 l
1487 1042 l
1488 1044 l
1490 1045 l
1492 1046 l
1493 1048 l
1495 1049 l
1497 1050 l
1498 1051 l
1500 1053 l
1502 1054 l
1504 1055 l
1505 1057 l
1507 1058 l
1509 1059 l
1510 1060 l
1512 1062 l
1514 1063 l
1515 1064 l
1517 1065 l
1519 1067 l
1520 1068 l
1522 1069 l
1524 1071 l
1525 1072 l
1527 1073 l
1529 1074 l
1530 1076 l
1532 1077 l
1534 1078 l
1535 1080 l
1537 1081 l
1539 1082 l
1540 1083 l
1542 1085 l
1544 1086 l
1545 1087 l
1547 1088 l
1549 1090 l
1550 1091 l
1552 1092 l
1554 1094 l
1555 1095 l
1557 1096 l
1559 1097 l
1560 1099 l
1562 1100 l
1564 1101 l
1565 1103 l
1567 1104 l
1569 1105 l
1570 1106 l
1572 1108 l
1574 1109 l
1576 1110 l
1577 1111 l
1579 1113 l
1581 1114 l
1582 1115 l
1584 1117 l
1586 1118 l
1587 1119 l
1589 1120 l
1591 1122 l
1592 1123 l
1594 1124 l
1596 1126 l
1597 1127 l
1599 1128 l
1601 1129 l
1602 1131 l
1604 1132 l
1606 1133 l
1607 1134 l
1609 1136 l
1611 1137 l
1612 1138 l
1614 1140 l
1616 1141 l
1617 1142 l
1619 1143 l
1621 1145 l
1622 1146 l
1624 1147 l
1626 1149 l
1627 1150 l
1629 1151 l
1631 1152 l
1632 1154 l
1634 1155 l
1636 1156 l
1637 1157 l
1639 1159 l
1641 1160 l
1643 1161 l
1644 1163 l
1646 1164 l
1648 1165 l
1649 1166 l
1651 1168 l
1653 1169 l
1654 1170 l
1656 1172 l
1658 1173 l
1659 1174 l
1661 1175 l
1663 1177 l
1664 1178 l
1666 1179 l
1668 1180 l
1669 1182 l
1671 1183 l
1673 1184 l
1674 1186 l
1676 1187 l
1678 1188 l
1679 1189 l
1681 1191 l
1683 1192 l
1684 1193 l
1686 1195 l
1688 1196 l
1689 1197 l
1691 1198 l
1693 1200 l
1694 1201 l
1696 1202 l
1698 1203 l
1699 1205 l
1701 1206 l
1703 1207 l
1704 1209 l
1706 1210 l
1708 1211 l
1709 1212 l
1711 1214 l
1713 1215 l
1715 1216 l
1716 1218 l
1718 1219 l
1720 1220 l
1721 1221 l
1723 1223 l
1725 1224 l
1726 1225 l
1728 1226 l
1730 1228 l
1731 1229 l
1733 1230 l
1735 1232 l
1736 1233 l
1738 1234 l
1740 1235 l
1741 1237 l
1743 1238 l
1745 1239 l
1746 1241 l
1748 1242 l
1750 1243 l
1751 1244 l
1753 1246 l
1755 1247 l
1756 1248 l
1758 1249 l
1760 1251 l
1761 1252 l
1763 1253 l
1765 1255 l
1766 1256 l
1768 1257 l
1770 1258 l
1771 1260 l
1773 1261 l
1775 1262 l
1776 1264 l
1778 1265 l
1780 1266 l
1781 1267 l
1783 1269 l
1785 1270 l
1787 1271 l
1788 1272 l
1790 1274 l
1792 1275 l
1793 1276 l
1795 1278 l
1797 1279 l
1798 1280 l
1800 1281 l
1802 1283 l
1803 1284 l
1805 1285 l
1807 1287 l
1808 1288 l
1810 1289 l
1812 1290 l
1813 1292 l
1815 1293 l
1817 1294 l
1818 1296 l
1820 1297 l
1822 1298 l
1823 1299 l
1825 1301 l
1827 1302 l
1828 1303 l
1830 1304 l
1832 1306 l
1833 1307 l
1835 1308 l
1837 1310 l
1838 1311 l
1840 1312 l
1842 1313 l
1843 1315 l
1845 1316 l
1847 1317 l
1848 1319 l
1850 1320 l
1852 1321 l
1853 1322 l
1855 1324 l
1857 1325 l
1859 1326 l
1860 1327 l
1862 1329 l
1864 1330 l
1865 1331 l
1867 1333 l
1869 1334 l
1870 1335 l
1872 1336 l
1874 1338 l
1875 1339 l
1877 1340 l
1879 1342 l
1880 1343 l
1882 1344 l
1884 1345 l
1885 1347 l
1887 1348 l
1889 1349 l
1890 1350 l
1892 1352 l
1894 1353 l
1895 1354 l
1897 1356 l
1899 1357 l
1900 1358 l
1902 1359 l
1904 1361 l
1905 1362 l
1907 1363 l
1909 1365 l
1910 1366 l
1912 1367 l
1914 1368 l
1915 1370 l
1917 1371 l
1919 1372 l
1920 1373 l
1922 1375 l
1924 1376 l
1925 1377 l
1927 1379 l
1929 1380 l
1931 1381 l
1932 1382 l
1934 1384 l
1936 1385 l
1937 1386 l
1939 1388 l
1941 1389 l
1942 1390 l
1944 1391 l
1946 1393 l
1947 1394 l
1949 1395 l
1951 1396 l
1952 1398 l
1954 1399 l
1956 1400 l
1957 1402 l
1959 1403 l
1961 1404 l
1962 1405 l
1964 1407 l
1966 1408 l
1967 1409 l
1969 1411 l
1971 1412 l
1972 1413 l
1974 1414 l
1976 1416 l
1977 1417 l
1979 1418 l
1981 1419 l
1982 1421 l
1984 1422 l
1986 1423 l
1987 1425 l
1989 1426 l
1991 1427 l
1992 1428 l
1994 1430 l
1996 1431 l
1998 1432 l
1999 1434 l
2001 1435 l
2003 1436 l
2004 1437 l
2006 1439 l
2008 1440 l
2009 1441 l
2011 1442 l
2013 1444 l
2014 1445 l
2016 1446 l
2018 1448 l
2019 1449 l
2021 1450 l
2023 1451 l
2024 1453 l
2026 1454 l
2028 1455 l
2029 1457 l
2031 1458 l
2033 1459 l
2034 1460 l
2036 1462 l
2038 1463 l
2039 1464 l
2041 1465 l
2043 1467 l
2044 1468 l
2046 1469 l
2048 1471 l
2049 1472 l
2051 1473 l
2053 1474 l
2054 1476 l
2056 1477 l
2058 1478 l
2059 1480 l
2061 1481 l
2063 1482 l
2064 1483 l
2066 1485 l
2068 1486 l
2070 1487 l
2071 1488 l
2073 1490 l
2075 1491 l
2076 1492 l
2078 1494 l
2080 1495 l
2081 1496 l
2083 1497 l
2085 1499 l
2086 1500 l
2088 1501 l
2090 1503 l
2091 1504 l
2093 1505 l
2095 1506 l
2096 1508 l
2098 1509 l
2100 1510 l
2101 1511 l
2103 1513 l
2105 1514 l
2106 1515 l
2108 1517 l
2110 1518 l
2111 1519 l
2113 1520 l
2115 1522 l
2116 1523 l
2118 1524 l
3 sw
1 0 0 rgb
st
2118 1524 m
2120 1526 l
2121 1527 l
2123 1528 l
2125 1529 l
2126 1531 l
2128 1532 l
2130 1533 l
2131 1534 l
2133 1536 l
2135 1537 l
2136 1538 l
2138 1540 l
2140 1541 l
2142 1542 l
2143 1543 l
2145 1545 l
2147 1546 l
2148 1547 l
2150 1549 l
2152 1550 l
2153 1551 l
2155 1552 l
2157 1554 l
2158 1555 l
2160 1556 l
2162 1557 l
2163 1559 l
2165 1560 l
2167 1561 l
2168 1563 l
2170 1564 l
2172 1565 l
2173 1566 l
2175 1568 l
2177 1569 l
2178 1570 l
2180 1572 l
2182 1573 l
2183 1574 l
2185 1575 l
2187 1577 l
2188 1578 l
2190 1579 l
2192 1580 l
2193 1582 l
2195 1583 l
2197 1584 l
2198 1586 l
2200 1587 l
2202 1588 l
2203 1589 l
2205 1591 l
2207 1592 l
2208 1593 l
2210 1595 l
2212 1596 l
2214 1597 l
2215 1598 l
2217 1600 l
2219 1601 l
2220 1602 l
2222 1604 l
2224 1605 l
2225 1606 l
2227 1607 l
2229 1609 l
2230 1610 l
2232 1611 l
2234 1612 l
2235 1614 l
2237 1615 l
2239 1616 l
2240 1618 l
2242 1619 l
2244 1620 l
2245 1621 l
2247 1623 l
2249 1624 l
2250 1625 l
2252 1627 l
2254 1628 l
2255 1629 l
2257 1630 l
2259 1632 l
2260 1633 l
2262 1634 l
2264 1635 l
2265 1637 l
2267 1638 l
2269 1639 l
2270 1641 l
2272 1642 l
2274 1643 l
2275 1644 l
2277 1646 l
2279 1647 l
2280 1648 l
2282 1650 l
2284 1651 l
2286 1652 l
2287 1653 l
2289 1655 l
2291 1656 l
2292 1657 l
2294 1658 l
2296 1660 l
2297 1661 l
2299 1662 l
2301 1664 l
2302 1665 l
2304 1666 l
2306 1667 l
2307 1669 l
2309 1670 l
2311 1671 l
2312 1673 l
2314 1674 l
2316 1675 l
2317 1676 l
2319 1678 l
2321 1679 l
2322 1680 l
2324 1681 l
2326 1683 l
2327 1684 l
2329 1685 l
2331 1687 l
2332 1688 l
2334 1689 l
2336 1690 l
2337 1692 l
2339 1693 l
2341 1694 l
2342 1696 l
2344 1697 l
2346 1698 l
2347 1699 l
2349 1701 l
2351 1702 l
2353 1703 l
2354 1704 l
2356 1706 l
2358 1707 l
2359 1708 l
2361 1710 l
2363 1711 l
2364 1712 l
2366 1713 l
2368 1715 l
2369 1716 l
2371 1717 l
2373 1719 l
2374 1720 l
2376 1721 l
2378 1722 l
2379 1724 l
2381 1725 l
2383 1726 l
2384 1727 l
2386 1729 l
2388 1730 l
2389 1731 l
2391 1733 l
2393 1734 l
2394 1735 l
2396 1736 l
2398 1738 l
2399 1739 l
2401 1740 l
2403 1742 l
2404 1743 l
2406 1744 l
2408 1745 l
2409 1747 l
2411 1748 l
2413 1749 l
2414 1750 l
2416 1752 l
2418 1753 l
2419 1754 l
2421 1756 l
2423 1757 l
2425 1758 l
2426 1759 l
2428 1761 l
2430 1762 l
2431 1763 l
2433 1765 l
2435 1766 l
2436 1767 l
2438 1768 l
2440 1770 l
2441 1771 l
2443 1772 l
2445 1773 l
2446 1775 l
2448 1776 l
2450 1777 l
2451 1779 l
2453 1780 l
2455 1781 l
2456 1782 l
2458 1784 l
2460 1785 l
2461 1786 l
2463 1788 l
2465 1789 l
2466 1790 l
2468 1791 l
2470 1793 l
2471 1794 l
2473 1795 l
2475 1796 l
2476 1798 l
2478 1799 l
2480 1800 l
2481 1802 l
2483 1803 l
2485 1804 l
2486 1805 l
2488 1807 l
2490 1808 l
2491 1809 l
2493 1811 l
2495 1812 l
2497 1813 l
2498 1814 l
2500 1816 l
2502 1817 l
2503 1818 l
2505 1819 l
2507 1821 l
2508 1822 l
2510 1823 l
2512 1825 l
2513 1826 l
2515 1827 l
2517 1828 l
2518 1830 l
2520 1831 l
2522 1832 l
2523 1834 l
2525 1835 l
2527 1836 l
2528 1837 l
2530 1839 l
2532 1840 l
2533 1841 l
2535 1842 l
2537 1844 l
2538 1845 l
2540 1846 l
2542 1848 l
2543 1849 l
2545 1850 l
2547 1851 l
2548 1853 l
2550 1854 l
2552 1855 l
2553 1857 l
2555 1858 l
2557 1859 l
2558 1860 l
2560 1862 l
2562 1863 l
2563 1864 l
2565 1865 l
2567 1867 l
2569 1868 l
2570 1869 l
2572 1871 l
2574 1872 l
2575 1873 l
2577 1874 l
2579 1876 l
2580 1877 l
2582 1878 l
2584 1880 l
2585 1881 l
2587 1882 l
2589 1883 l
2590 1885 l
2592 1886 l
2594 1887 l
2595 1888 l
2597 1890 l
2599 1891 l
2600 1892 l
2602 1894 l
2604 1895 l
2605 1896 l
2607 1897 l
2609 1899 l
2610 1900 l
2612 1901 l
2614 1903 l
2615 1904 l
2617 1905 l
2619 1906 l
2620 1908 l
st
gr
gs
gs
1 -1 sc
409 -1296 tr
90 ro
/MC2_Arial 67 self 0 0 m
(ln\(R)[15 37 22 48 ] xs
1 -1 sc
gr
gs
1 -1 sc
432 -1174 tr
90 ro
/MC2_Arial 40 self 0 0 m
(korr)[20 22 13 13 ] xs
1 -1 sc
gr
gs
1 -1 sc
409 -1106 tr
90 ro
/MC2_Arial 67 self 0 0 m
(\))[22 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC3_Arial 67 self 1612 -2210 m
(Dicke \(mm\))[48 15 34 34 37 19 22 57 57 22 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
